cmake_minimum_required(VERSION 3.28)

project(CompiScriptCompiler VERSION 0.1)

set(CMAKE_CXX_STANDARD 23)
set(CMAKE_CXX_STANDARD_REQUIRED TRUE)

set(ANTLR4_VERSION 13.2)

find_package(antlr4-runtime REQUIRED)
find_package(antlr4-generator REQUIRED)

set(ANTLR4_JAR_LOCATION ${CMAKE_CURRENT_BINARY_DIR}/antlr-4.${ANTLR4_VERSION}-complete.jar)
set(ANTLR4_GRAMMAR_FILE ${CMAKE_CURRENT_SOURCE_DIR}/tools/CompiScript.g4)

# Generate lexer and parser visitor files
antlr4_generate(
   cscript
   ${ANTLR4_GRAMMAR_FILE}
   BOTH
   FALSE
   TRUE
   "CompiScript"
)

set(SOURCES
    src/SymbolTable.cpp
    src/SemanticChecker.cpp
)

# CompiScript Lexer, Parser and Listener generated by ANTLR
add_library(cscript_base SHARED 
    ${ANTLR4_SRC_FILES_cscript})
target_include_directories(cscript_base PRIVATE 
    ${ANTLR4_INCLUDE_DIR} 
    ${ANTLR4_INCLUDE_DIR_cscript})
target_link_libraries(cscript_base PRIVATE antlr4_shared)

# CompiScript executable
add_executable(cscript src/main.cpp ${SOURCES})
     
target_include_directories(cscript PRIVATE 
    src/ 
    ${ANTLR4_INCLUDE_DIR}
    ${ANTLR4_INCLUDE_DIR_cscript})
target_link_libraries(cscript PRIVATE cscript_base antlr4_shared)

find_package(Catch2 3 QUIET)

if(Catch2_FOUND)
    message(STATUS "Catch2 encontrado. Se habilitan los tests.")

    enable_testing()

    add_executable(tests tests/test_main.cpp ${SOURCES})
    target_include_directories(tests PRIVATE 
        src/
        ${ANTLR4_INCLUDE_DIR} 
        ${ANTLR4_INCLUDE_DIR_cscript}
    ) 

    target_link_libraries(tests PRIVATE 
        cscript_base 
        antlr4_shared 
        Catch2::Catch2WithMain
    )

    include(CTest)
    include(Catch)
    catch_discover_tests(tests)

else()
    message(WARNING "Catch2 no encontrado. Los tests ser√°n deshabilitados.")
endif()
